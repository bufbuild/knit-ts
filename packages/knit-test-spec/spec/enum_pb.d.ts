// @generated by protoc-gen-es v1.2.0
// @generated from file spec/enum.proto (package spec, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum spec.TopLevel
 */
export declare enum TopLevel {
  /**
   * @generated from enum value: FIRST = 0;
   */
  FIRST = 0,

  /**
   * @generated from enum value: SECOND = 1;
   */
  SECOND = 1,
}

/**
 * @generated from message spec.EnumShell
 */
export declare class EnumShell extends Message<EnumShell> {
  /**
   * @generated from field: optional spec.EnumShell.InsideMessage optional_enum = 1;
   */
  optionalEnum?: EnumShell_InsideMessage;

  constructor(data?: PartialMessage<EnumShell>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "spec.EnumShell";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EnumShell;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EnumShell;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EnumShell;

  static equals(a: EnumShell | PlainMessage<EnumShell> | undefined, b: EnumShell | PlainMessage<EnumShell> | undefined): boolean;
}

/**
 * @generated from enum spec.EnumShell.InsideMessage
 */
export declare enum EnumShell_InsideMessage {
  /**
   * @generated from enum value: THIRD = 0;
   */
  THIRD = 0,

  /**
   * @generated from enum value: FOURTH = 1;
   */
  FOURTH = 1,
}

