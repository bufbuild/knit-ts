// @generated by protoc-gen-es v1.5.0
// @generated from file spec/all.proto (package spec, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Wkt } from "./wkt_pb.js";
import type { Scalar } from "./scalars_pb.js";
import type { Map } from "./map_pb.js";
import type { Oneof } from "./oneof_pb.js";
import type { Message as Message$1 } from "./messages_pb.js";
import type { EnumShell, TopLevel } from "./enum_pb.js";

/**
 * @generated from message spec.All
 */
export declare class All extends Message<All> {
  /**
   * @generated from field: spec.All self = 1;
   */
  self?: All;

  /**
   * @generated from field: spec.Wkt wkt = 2;
   */
  wkt?: Wkt;

  /**
   * @generated from field: spec.Scalar scalars = 3;
   */
  scalars?: Scalar;

  /**
   * @generated from field: spec.Map map = 4;
   */
  map?: Map;

  /**
   * @generated from field: spec.Oneof oneof = 5;
   */
  oneof?: Oneof;

  /**
   * @generated from field: spec.Message message = 6;
   */
  message?: Message$1;

  /**
   * @generated from field: spec.TopLevel enum = 7;
   */
  enum: TopLevel;

  /**
   * @generated from field: spec.EnumShell enum_shell = 8;
   */
  enumShell?: EnumShell;

  constructor(data?: PartialMessage<All>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "spec.All";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): All;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): All;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): All;

  static equals(a: All | PlainMessage<All> | undefined, b: All | PlainMessage<All> | undefined): boolean;
}

